/* 
    @encoding utf-8
    @name           KellyFavItems
    @namespace      Kelly
    @description    save bookmarks to local storage, batch download
    @author         Rubchuk Vladimir <torrenttvi@gmail.com>
    @license        GPLv3
    
    /\_/\ 
    ='_'=   /  __THIS FILE IS AUTOGENERATED, AND CAN BE OVERWRITTEN__
    |><  \ /      
    |..___/    FOR DEVELOPMENT PURPOSES USE SOURCE CODE FROM https://github.com/NC22/KellyCFavorites   
    
*/










































// EXTRACTED FROM FILE lib\kellyOptionsPage.js
var K_FAV = false;

KellyOptionsPage = new Object();
KellyOptionsPage.env = false;

KellyOptionsPage.front = '../../kmerged.user.js';
KellyOptionsPage.sandBox = false;

KellyOptionsPage.loadDiskete = function(src, onLoad) {

    var a = document.createElement("script");
        a.type = "text/javascript",
        a.src = src;
        a.onload = function() {            
            if (onLoad) onLoad(src);
        }
        
        document.body.appendChild(a);
}

KellyOptionsPage.getContainer = function() {
	
	if (this.sandBox) return this.sandBox;
	
	this.sandBox = document.getElementById('page-sandbox');
	return this.sandBox;	
}

KellyOptionsPage.init = function() {
          
    var onLoadFrontendController = function() {
		
        var onLoadCssResource = function(response) {
        
			// console.log(response.url);
			
			if (!response || response.data === false) {	
				KellyTools.log('onLoadCssResource : bad init data');
				return false;
			}
			
			if (!response.data.css) {
				
				KellyTools.log('onLoadCssResource : css empty');
				KellyTools.log('onLoadCssResource : Browser API response : ' + response.data.notice);
				
				return false; 
			}
			
			K_FAV.addCss(KellyTools.replaceAll(response.data.css, '__BASECLASS__', KellyOptionsPage.env.className));
			K_FAV.load(false, function() {
				 K_FAV.initOnPageReady();
			});
		};  
		
		KellyOptionsPage.showProfileSandbox();
		
        K_FAV = new KellyFavItems({initAction : 'ignore'});
		
        KellyTools.DEBUG = true;
        
        KellyOptionsPage.env = K_FAV.getGlobal('env');        
        KellyOptionsPage.env.hostClass = 'options_page';
		KellyOptionsPage.env.location = {
			href : 'http://joyreactor.cc/',
			protocol : 'http:',
			host : 'joyreactor.cc',
		};  
    
        document.title = KellyTools.getProgName();        
        
        var nativeOnExtensionReady = KellyOptionsPage.env.events.onExtensionReady;
				
        KellyOptionsPage.env.events.onExtensionReady = function() {
            
            if (nativeOnExtensionReady) nativeOnExtensionReady();
            
			K_FAV.getGlobal('image_events').saveImageProportions = function() { return; }			
			K_FAV.aspectRatioAccurCheck = false; // копирайт портит проверку соотношения сторон, отключаем
            K_FAV.isDownloadSupported = false; // Обратная связь при скачивании файла до таба настроек не дойдет т.к. не настроен селектор matches, см. KellyEDispetcher.sendNotification
            K_FAV.showOptionsDialog();
        }
                
        KellyTools.getBrowser().runtime.sendMessage({method: "getCss", items : [KellyOptionsPage.env.profile + '_options']}, onLoadCssResource);
    }
     
    this.loadDiskete(this.front, onLoadFrontendController);
}

KellyOptionsPage.showProfileSandbox = function() {
    
    // show simplified joyreactor environment in sandbox 
    
    var sandboxHtml = '\
        <div class="joyreactor-env">\
            <div id="container">\
            \
                <div id="submenu"></div>\
                \
                <div class="page-content">\
                    \
                    <div class="content">\
                        <div id="contentinner"></div>\
                    </div>\
                    \
                    <div id="sidebar"></div>\
                    \
                    <div class="clear"></div>\
                </div>\
                \
            </div>\
        </div>\
    ';
	
    if (!this.getContainer()) {
        
        KellyTools.log('KellyOptionsPage : cant get container');
        return false;
    }
    
    KellyTools.setHTMLData(this.getContainer(), sandboxHtml);
	return true;
}

// initialization
KellyOptionsPage.init();

// keep empty space to prevent syntax errors if some symbols will added at end
// end of file 
